@use '@assets/styles/colors.scss' as colors;

@font-face {
    font-family: typewrongfont;
    src: url('../static/fonts/type_wrong/typwrng.ttf')
}

@font-face {
    font-family: typeoldfont;
    src: url('../static/fonts/typeo.ttf')
}

@font-face {
    font-family: typeformefont;
    src: url('../static/fonts/ATypewriterForMe.ttf')
}

@font-face {
    font-family: brussfont;
    src: url('../static/fonts/Bruss.ttf')
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 2s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}


.circle__img {
    transition: all 1s ease-in-out;
}

/* Format Based on Screen Widths */
@media (min-width: 950px) {
    .circle__img {
        height: 250px;
        padding: 20px;
    }
}

@media (max-width: 950px) {
    .circle__img {
        height: 150px;
        padding: 20px;
    }
}

@media (max-width: 768px) {
    .circle__img {
        height: 150px;
        padding: 20px;
    }
}

@media (max-width: 500px) {
    .circle__img {
        height: 150px;
        padding: 20px;
    }
  }

@media (max-width: 390px) {
    .circle__img {
        height: 150px;
        padding: 20px;
    }
}


.splash-screen {
  @mixin splasher-mixin($animation, $cells) {
    @each $row,$col,$row2,$col2,$duration,$delay,$count in $cells {
      @if $row2 == null {
        $row2: $row;
      }
      @if $col2 == null {
        $col2: $col;
      }
      @if $duration == null {
        $duration: 4s;
      }
      @if $delay == null {
        $delay: 0ms;
      }
      @if $count == null {
        $count: 1;
      }
      $delayX: 0s;
      @for $r from $row through $row2 {
        $delayY: 0s;
        @for $c from $col through $col2 {
          $delayY: $delayY + $delay;
          $selector: '.r-#{$r}.c-#{$c}';
          #{$selector} .back {
            animation-name: $animation;
            animation-duration: $duration;
            animation-iteration-count: $count;
            animation-delay: calc(#{$delayY} + #{$delayX});
            animation-fill-mode: forwards;
          }
        }
        $delayX: $delayX + $delay;
      }
    }
  }

  background: white;
  position: absolute;
  top: 0;
  width: 100vw;
  height: 100vh;
  display: flex;

  .splash-logo {
    height: 100%;
    position: absolute;
    //top: calc(50% - 170px);
    width: 100%;
    text-align: center;
    align-content: center;
    margin-top: auto;
    margin-bottom: auto;
    z-index: 2;
    opacity: 0;
    animation: 4s fade-in .2s forwards ease-in-out;
  }

  .splash-container {
    width: 100%;
    margin-top: auto;
    margin-bottom: auto;

    .splash-row {
      display: flex;
      justify-content: center;
      height: 20px;
      align-content: center;

      .splash-cell {
        width: 20px;
        height: 20px;
        .back {
          width: 20px;
          height: 20px;
          background-color: colors.$color-primary-0;
          position: relative;
          top: 0;
          z-index: 0;
        }
        .front {
          width: 20px;
          height: 20px;
          background-color: white;
          position: relative;
          top: -20px;
          z-index: 1;
        }
      }
      @include splasher-mixin(flipper, [
        5 5 5 35 null .07s 1,
        5 36 25 36 null .14s 1,
        25 5 25 36 null 0s 1,
        5 5 25 5 5s .09s 1
      ]);
    }
  }

  @keyframes flipper {
    from {
      z-index: 0;
      opacity: 0;
      transform: rotate3d(0,0,0,90deg);
    }
    100% {
      opacity: 100%;
      z-index: 5;
      transform: rotate3d(-1,1,0,-180deg);
    }
  }

  @keyframes letters {
    from {
      z-index: 0;
      opacity: 0;
      border: 3px white solid;
      border-radius: 5px;
      background-color: black;
      transform: rotate3d(0,0,0,90deg);
      transform: scale3d(0,.3,.3);
    }
    20% {
      z-index: 0;
      border: 1px white solid;
      // border-radius: 2px;
      // transform: rotate3d(0,1,1,180deg);
      transform: scale3d(.4,.9,.7);
    }
    70% {
      z-index: 0;
      // border: .5px white solid;
      // border-radius: 2px;
      transform: rotate3d(0,1,1,-180deg);
      transform: scale3d(.7,.7,.7);
    }
    100% {
      opacity: 100%;
      z-index: 5;
      // border: .2px white solid;
      // border-radius: 0px;
      transform: rotate3d(-1,1,0,180deg);
    }
  }

  @keyframes white-to-color-primary-0 {
    from {
      transform: rotate3d(0,0,0,90deg);
      // background-color: white;
    }
    10% {
      // background-color: colors.$color-primary-0;
      transform: rotate3d(-1,1,0,180deg);
    }
    100% {
      // background-color: colors.$color-primary-0;
      transform: rotate3d(-1,1,0,-180deg);
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0
    }
    100% {
      opacity: 1;
    }
  }
}
